---
# Source: mongodb/templates/pcv.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  name: "mongo-pvc"
  labels:
    helm.sh/chart: mongodb-0.1.1
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/version: "7.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "512M"
  storageClassName: ""
---
# Source: mongodb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    helm.sh/chart: mongodb-0.1.1
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/version: "7.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
      name: mongodb
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
---
# Source: mongodb/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    helm.sh/chart: mongodb-0.1.1
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/version: "7.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/instance: mongodb
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: mongodb
          securityContext:
            {}
          image: "mongo:7.0.2"  
          imagePullPolicy: Always
          env:
            - name: MONGO_INITDB_ROOT_PASSWORD_FILE
              value: /etc/secrets/mongodb/mongo_root_pw
            - name: MONGO_INITDB_ROOT_USERNAME
              value: admin
          ports:
            - containerPort: 27017
              name: mongodb
              protocol: TCP


          volumeMounts:
            - name: mongo-data
              mountPath: /var/lib/mongo

            - name: secret-volume
              mountPath: /etc/secrets/mongodb
          livenessProbe:
            exec:
              command:
              - echo
              - db.runCommand("ping").ok
              - ""
              - mongosh
              - localhost:27017/test
              - --quiet
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 5
          
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi


      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-pvc

        - name: secret-volume
          secret:
            secretName: mongodb-secret
